# IDZ80 Makefile

#MainDrive
DRV = K:

# wxWidgets
WXWVERSION = 294
WXW ?= $(DRV)\wxw\wx$(WXWVERSION)

# Compiler
CC = $(DRV)\MinGW\bin\g++

# Debug
DEBUG ?= 0

# Resource
RS = windres
RS_FLAGS = --include-dirs=$(WXW)\include

# Date and time
DATE = $(shell date /t)
TIME = $(shell time /t)


ifeq ($(DEBUG), 0)
	# Release
	CC_FLAGS = -O2 -Wredundant-decls -march=pentium-mmx -c -Wall -pipe -mthreads
	DEFS = -D__GNUWIN32__ -D__WXMSW__ -DWXUSINGDLL -DwxUSE_UNICODE
	INCLUDE0_PATH = $(WXW)\lib\mswu
	LIBFILE1 = -lwxbase$(WXWVERSION)u_gcc_custom
	LIBFILE2 = -lwxmsw$(WXWVERSION)u_aui_gcc_custom
	LIBFILE3 = -lwxmsw$(WXWVERSION)u_core_gcc_custom
else
	# DEBUG
	CC_FLAGS = -Wredundant-decls -march=pentium-mmx -c -Wall -pipe -mthreads -g
	DEFS = -D__GNUWIN32__ -D__WXMSW__ -DWXUSINGDLL -DwxUSE_UNICODE -D__WXDEBUG__ -DIDZ80DEBUG -DIDZ80_DECODER -DIDZ80_DASMED
	INCLUDE0_PATH = $(WXW)\lib\mswud
	LIBFILE1 = -lwxbase$(WXWVERSION)ud_gcc_custom
	LIBFILE2 = -lwxmsw$(WXWVERSION)ud_aui_gcc_custom
	LIBFILE3 = -lwxmsw$(WXWVERSION)ud_core_gcc_custom
endif


INCLUDE1_PATH = $(WXW)\include
INCLUDE2_PATH = $(WXW)\contrib\include
INCLUDE = -I$(INCLUDE0_PATH) -I$(INCLUDE1_PATH) -I$(INCLUDE2_PATH)

# Linker
LD_FLAGS = -Wl,--subsystem,windows -mwindows


# libraries
LIBS = $(LIBFILE1) $(LIBFILE2) $(LIBFILE3)

# libraries's path
LIBPATH = -L$(WXW)\lib

# Project's path
ifeq ($(DEBUG), 0)
	OBJDIR = ..\obj\Release
	BINDIR = ..\bin\Release
else
	OBJDIR = ..\obj\Debug
	BINDIR = ..\bin\Debug
endif

SRCDIR = ..\src
RESDIR = ..

EXECFILE = $(BINDIR)\idz80_make.exe

SLASH =/
BACKSLASH =\\

UNIX_SRCDIR = $(subst $(BACKSLASH),$(SLASH),$(SRCDIR))
UNIX_OBJDIR = $(subst $(BACKSLASH),$(SLASH),$(OBJDIR))
UNIX_BINDIR = $(subst $(BACKSLASH),$(SLASH),$(BINDIR))

CPPSOURCES = $(wildcard $(UNIX_SRCDIR)/*.cpp)
OBJSOURCES1 = $(subst $(UNIX_SRCDIR),$(UNIX_OBJDIR),$(CPPSOURCES))
OBJSOURCES = $(subst .cpp,.o,$(OBJSOURCES1))

all: idz80

make_dir:
	@echo Checking dirs...
	@if not exist $(BINDIR) md $(BINDIR)
	@if not exist $(OBJDIR) md $(OBJDIR)


clean:
	@echo Cleaning...
	-if exist $(OBJDIR)\*.o del $(OBJDIR)\*.o
	-if exist $(EXECFILE) del $(EXECFILE)

rebuild:
	$(MAKE) clean
	$(MAKE)

idz80: $(OBJSOURCES)
	@echo Linking...
	$(CC) -o $(EXECFILE) $^ $(LD_FLAGS) $(LIBPATH) $(LIBS)
	@echo --------------------------------------------------------
	@echo $@ done !
	@echo $(TIME) $(DATE)
	@echo File is $(EXECFILE)


%.o: %.cpp
	$(CC) -c $< $(CC_FLAGS) $(DEFS) $(INCLUDE) -o $@


-include $(CPPSOURCES:.cpp=.d)

%.d: %.cpp
	$(CC) $< -MM -MT '$(UNIX_OBJDIR)\*.o *.d ' -MD $(CC_FLAGS) $(INCLUDE)




